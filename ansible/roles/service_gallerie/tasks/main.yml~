- meta: flush_handlers
  tags: [service_gallerie]

- name: Compose directory is present
  file:
    dest: "{{ compose_config_dir }}/{{ alias }}{{ container_name }}"
    state: directory
  tags: [service_gallerie]

- name: Compose template is present
  template:
    src: "{{ container_name }}.yml.j2"
    dest: "{{ compose_config_dir }}/{{ alias }}{{ container_name }}/docker-compose.yml.ctmpl"
  register: result
  tags: [service_gallerie]

- include: apply-service-template.yml

- name: Container is pulled
  shell: docker-compose pull {{ container_name }}
  args:
    chdir: "{{ compose_config_dir }}/{{ alias }}{{ container_name }}"
  environment:
    DOCKER_HOST: tcp://0.0.0.0:2375
  tags: [service_gallerie]

- name: Container is stopped
  shell: docker-compose stop {{ container_name }}
  args:
    chdir: "{{ compose_config_dir }}/{{ alias }}{{ container_name }}"
  environment:
    DOCKER_HOST: tcp://0.0.0.0:2375
  tags: [service_gallerie]

- name: Container is removed
  shell: docker-compose rm -f {{ container_name }}
  args:
    chdir: "{{ compose_config_dir }}/{{ alias }}{{ container_name }}"
  environment:
    DOCKER_HOST: tcp://0.0.0.0:2375
  tags: [service_gallerie]

- name: Container is up
#  shell: docker-compose scale {{ container_name }}={{ service_instances }}
  shell: docker-compose scale {{ container_name }}=2
  args:
    chdir: "{{ compose_config_dir }}/{{ alias }}{{ container_name }}"
  environment:
    DOCKER_HOST: tcp://0.0.0.0:2375
  tags: [service_gallerie]

- name: Simulate testing
  shell: sleep 15
  tags: [service_gallerie]

- debug: var=services/{{ alias }}{{ container_name }}/color

- name: nginx server template is present
  template:
    src: nginx-server.conf.j2
    dest: /data/nginx/servers/{{ nginx_conf_name }}.conf
  tags: [service_gallerie]

- name: nginx Consul templates are present
  template:
    src: "{{ item.src }}"
    dest: "{{ item.ctmplDest }}"
  with_items: nginx_templates
  tags: [service_gallerie]

- name: nginx Consul templates are applied
  shell: >
    consul-template \
      -consul localhost:8500 \
      -template "{{ item.ctmplDest }}:{{ item.dest }}:docker kill -s HUP nginx" \
      -once
  with_items: nginx_templates
  tags: [service_gallerie]

- name: Consul configs are present
  template:
    src: consul_service.json.j2
    dest: /etc/consul.d/service-{{ alias }}{{ container_name }}.json
  register: health_result
  tags: [service_gallerie]

- name: Consul is restarted
  shell: killall -HUP consul
  when: health_result|changed
  tags: [service_gallerie]


